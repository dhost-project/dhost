version: "3.7"

services:
  api:
    build:
      context: ./../../
      dockerfile: ./tools/docker/api/Dockerfile_dev
    restart: unless-stopped
    volumes:
      - ./../../:/app
    ports:
      - 8000:8000
    depends_on:
      - db
      - broker
    environment:
      - ALLOWED_HOSTS=localhost,127.0.0.1,api
      - DJANGO_ENV=development  # can be set to `production`
      - DJANGO_SECRET_KEY=secret
      - ENABLE_SSL=False
      - DATABASE_URL=postgres://dhost:dhost@db:5432/dhost
      - EMAIL_HOST=mailhog
      - CELERY_BROKER_URL=redis://broker:6379/1
      - CELERY_RESULT_BACKEND=redis://broker:6379/1

  worker:
    build:
      context: ./../../
      dockerfile: ./tools/docker/api/Dockerfile_dev
    command: celery -A dhost worker --loglevel=info -n worker
    restart: unless-stopped
    volumes:
      - ./../../:/app
    depends_on:
      - api
      - broker
    environment:
      - ALLOWED_HOSTS=localhost,127.0.0.1,worker
      - DJANGO_ENV=development  # can be set to `production`
      - DJANGO_SECRET_KEY=secret
      - ENABLE_SSL=False
      - EMAIL_HOST=mailhog
      - CELERY_BROKER_URL=redis://broker:6379/1
      - CELERY_RESULT_BACKEND=redis://broker:6379/1

  dashboard:
    build:
      context: ./../../dhost/frontend/
    restart: unless-stopped
    volumes:
      - ./../../dhost/frontend/:/app
      - /app/node_modules/
    ports:
      - 3000:3000

  db:
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=dhost
      - POSTGRES_PASSWORD=dhost

  broker:
    image: redis
    restart: unless-stopped
    ports:
      - 6379:6379

  monitor:
    image: mher/flower
    restart: unless-stopped
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=redis://broker:6379/1
      - CELERY_RESULT_BACKEND=redis://broker:6379/1

  adminer:
    image: adminer
    restart: unless-stopped
    ports:
      - 8080:8080
    depends_on:
      - db

  mail:
    image: mailhog/mailhog
    restart: unless-stopped
    ports:
      - 1025:1025
      - 8025:8025

  prometheus:
    image: prom/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    restart: unless-stopped
    ports:
      - 3030:3000
    depends_on:
      - prometheus
